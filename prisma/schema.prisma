// prisma/schema.prisma

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String    @id @default(uuid())
  name       String?
  email      String?   @unique
  password   String
  image      String?
  karma      Int       @default(0)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  skills     Skill[]   @relation("UserSkills")
  teacherSessions Session[] @relation("TeacherSessions")
  studentSessions Session[] @relation("StudentSessions")
  sentMessages    Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
}

model Skill {
  id          String   @id @default(uuid())
  title       String
  description String
  category    String
  level       String
  duration    Float
  price       Float
  maxStudents Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  teacherId   String
  teacher     User     @relation(fields: [teacherId], references: [id], name: "UserSkills")
  sessions    Session[]
}

model Session {
  id         String   @id @default(uuid())
  skillId    String
  skill      Skill    @relation(fields: [skillId], references: [id])
  teacherId  String
  teacher    User     @relation("TeacherSessions", fields: [teacherId], references: [id])
  studentId  String?
  student    User?    @relation("StudentSessions", fields: [studentId], references: [id])
  startTime  DateTime
  endTime    DateTime
  status     String   @default("pending")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Message {
  id         String   @id @default(uuid())
  senderId   String
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiverId String
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
